
//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace DF.Domain.Concrete
{
using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;
using DF.Domain.Abstract;

		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Address")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Address : EntityObject , IAddress
{
    #region Factory Method

    /// <summary>
    /// Create a new Address object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    public static Address CreateAddress(global::System.Guid id)
    {
        Address address = new Address();
        address.Id = id;
        return address;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address1
    {
        get
        {
            return _Address1;
        }
        set
        {
            OnAddress1Changing(value);
            ReportPropertyChanging("Address1");
            _Address1 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address1");
            OnAddress1Changed();
        }
    }
    private global::System.String _Address1;
    partial void OnAddress1Changing(global::System.String value);
    partial void OnAddress1Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Address2
    {
        get
        {
            return _Address2;
        }
        set
        {
            OnAddress2Changing(value);
            ReportPropertyChanging("Address2");
            _Address2 = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Address2");
            OnAddress2Changed();
        }
    }
    private global::System.String _Address2;
    partial void OnAddress2Changing(global::System.String value);
    partial void OnAddress2Changed();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String City
    {
        get
        {
            return _City;
        }
        set
        {
            OnCityChanging(value);
            ReportPropertyChanging("City");
            _City = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("City");
            OnCityChanged();
        }
    }
    private global::System.String _City;
    partial void OnCityChanging(global::System.String value);
    partial void OnCityChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String State
    {
        get
        {
            return _State;
        }
        set
        {
            OnStateChanging(value);
            ReportPropertyChanging("State");
            _State = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("State");
            OnStateChanged();
        }
    }
    private global::System.String _State;
    partial void OnStateChanging(global::System.String value);
    partial void OnStateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String County
    {
        get
        {
            return _County;
        }
        set
        {
            OnCountyChanging(value);
            ReportPropertyChanging("County");
            _County = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("County");
            OnCountyChanged();
        }
    }
    private global::System.String _County;
    partial void OnCountyChanging(global::System.String value);
    partial void OnCountyChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Type
    {
        get
        {
            return _Type;
        }
        set
        {
            OnTypeChanging(value);
            ReportPropertyChanging("Type");
            _Type = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Type");
            OnTypeChanged();
        }
    }
    private global::System.String _Type;
    partial void OnTypeChanging(global::System.String value);
    partial void OnTypeChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Zip
    {
        get
        {
            return _Zip;
        }
        set
        {
            OnZipChanging(value);
            ReportPropertyChanging("Zip");
            _Zip = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Zip");
            OnZipChanged();
        }
    }
    private global::System.String _Zip;
    partial void OnZipChanging(global::System.String value);
    partial void OnZipChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "Dealership_Address", "Dealership")]
    public EntityCollection<Dealership> Dealership
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealership>("DFModel.Dealership_Address", "Dealership");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealership>("DFModel.Dealership_Address", "Dealership", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Buyer_Address", "Buyer")]
    public Buyer Buyer
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Address", "Buyer").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Address", "Buyer").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Buyer> BuyerReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Address", "Buyer");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buyer>("DFModel.FK_Buyer_Address", "Buyer", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Lender_Address", "Lender")]
    public EntityCollection<Lender> Lender
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lender>("DFModel.FK_Lender_Address", "Lender");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lender>("DFModel.FK_Lender_Address", "Lender", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Buyer")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Buyer : EntityObject , IBuyer
{
    #region Factory Method

    /// <summary>
    /// Create a new Buyer object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    public static Buyer CreateBuyer(global::System.Guid id)
    {
        Buyer buyer = new Buyer();
        buyer.Id = id;
        return buyer;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String SSN
    {
        get
        {
            return _SSN;
        }
        set
        {
            OnSSNChanging(value);
            ReportPropertyChanging("SSN");
            _SSN = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("SSN");
            OnSSNChanged();
        }
    }
    private global::System.String _SSN;
    partial void OnSSNChanging(global::System.String value);
    partial void OnSSNChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DOB
    {
        get
        {
            return _DOB;
        }
        set
        {
            OnDOBChanging(value);
            ReportPropertyChanging("DOB");
            _DOB = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DOB");
            OnDOBChanged();
        }
    }
    private Nullable<global::System.DateTime> _DOB;
    partial void OnDOBChanging(Nullable<global::System.DateTime> value);
    partial void OnDOBChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String DL
    {
        get
        {
            return _DL;
        }
        set
        {
            OnDLChanging(value);
            ReportPropertyChanging("DL");
            _DL = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("DL");
            OnDLChanged();
        }
    }
    private global::System.String _DL;
    partial void OnDLChanging(global::System.String value);
    partial void OnDLChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DLExpiration
    {
        get
        {
            return _DLExpiration;
        }
        set
        {
            OnDLExpirationChanging(value);
            ReportPropertyChanging("DLExpiration");
            _DLExpiration = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DLExpiration");
            OnDLExpirationChanged();
        }
    }
    private Nullable<global::System.DateTime> _DLExpiration;
    partial void OnDLExpirationChanging(Nullable<global::System.DateTime> value);
    partial void OnDLExpirationChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String DLState
    {
        get
        {
            return _DLState;
        }
        set
        {
            OnDLStateChanging(value);
            ReportPropertyChanging("DLState");
            _DLState = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("DLState");
            OnDLStateChanged();
        }
    }
    private global::System.String _DLState;
    partial void OnDLStateChanging(global::System.String value);
    partial void OnDLStateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> ContactId
    {
        get
        {
            return _ContactId;
        }
        set
        {
            OnContactIdChanging(value);
            ReportPropertyChanging("ContactId");
            _ContactId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ContactId");
            OnContactIdChanged();
        }
    }
    private Nullable<global::System.Guid> _ContactId;
    partial void OnContactIdChanging(Nullable<global::System.Guid> value);
    partial void OnContactIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> AddressId
    {
        get
        {
            return _AddressId;
        }
        set
        {
            OnAddressIdChanging(value);
            ReportPropertyChanging("AddressId");
            _AddressId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("AddressId");
            OnAddressIdChanged();
        }
    }
    private Nullable<global::System.Guid> _AddressId;
    partial void OnAddressIdChanging(Nullable<global::System.Guid> value);
    partial void OnAddressIdChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Buyer_Address", "Address")]
    public Address Address
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Buyer_Address", "Address").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Buyer_Address", "Address").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Address> AddressReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Buyer_Address", "Address");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DFModel.FK_Buyer_Address", "Address", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Buyer_Contact", "Contact")]
    public Contact Contact
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Buyer_Contact", "Contact").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Buyer_Contact", "Contact").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Contact> ContactReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Buyer_Contact", "Contact");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DFModel.FK_Buyer_Contact", "Contact", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Buyer", "Deal")]
    public EntityCollection<Deal> Deal
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DFModel.FK_Deal_Buyer", "Deal");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DFModel.FK_Deal_Buyer", "Deal", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Company")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Company : EntityObject , ICompany
{
    #region Factory Method

    /// <summary>
    /// Create a new Company object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="description">Initial value of the Description property.</param>
    /// <param name="dateCreated">Initial value of the DateCreated property.</param>
    /// <param name="active">Initial value of the Active property.</param>
    public static Company CreateCompany(global::System.Guid id, global::System.String description, global::System.DateTime dateCreated, global::System.Boolean active)
    {
        Company company = new Company();
        company.Id = id;
        company.Description = description;
        company.DateCreated = dateCreated;
        company.Active = active;
        return company;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Description
    {
        get
        {
            return _Description;
        }
        set
        {
            OnDescriptionChanging(value);
            ReportPropertyChanging("Description");
            _Description = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Description");
            OnDescriptionChanged();
        }
    }
    private global::System.String _Description;
    partial void OnDescriptionChanging(global::System.String value);
    partial void OnDescriptionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime DateCreated
    {
        get
        {
            return _DateCreated;
        }
        set
        {
            OnDateCreatedChanging(value);
            ReportPropertyChanging("DateCreated");
            _DateCreated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateCreated");
            OnDateCreatedChanged();
        }
    }
    private global::System.DateTime _DateCreated;
    partial void OnDateCreatedChanging(global::System.DateTime value);
    partial void OnDateCreatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateModified
    {
        get
        {
            return _DateModified;
        }
        set
        {
            OnDateModifiedChanging(value);
            ReportPropertyChanging("DateModified");
            _DateModified = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateModified");
            OnDateModifiedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateModified;
    partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateModifiedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateDeactivated
    {
        get
        {
            return _DateDeactivated;
        }
        set
        {
            OnDateDeactivatedChanging(value);
            ReportPropertyChanging("DateDeactivated");
            _DateDeactivated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateDeactivated");
            OnDateDeactivatedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateDeactivated;
    partial void OnDateDeactivatedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateDeactivatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> CreatedByUserId
    {
        get
        {
            return _CreatedByUserId;
        }
        set
        {
            OnCreatedByUserIdChanging(value);
            ReportPropertyChanging("CreatedByUserId");
            _CreatedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedByUserId");
            OnCreatedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _CreatedByUserId;
    partial void OnCreatedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnCreatedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> ModifiedByUserId
    {
        get
        {
            return _ModifiedByUserId;
        }
        set
        {
            OnModifiedByUserIdChanging(value);
            ReportPropertyChanging("ModifiedByUserId");
            _ModifiedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ModifiedByUserId");
            OnModifiedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _ModifiedByUserId;
    partial void OnModifiedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnModifiedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> DeactivatedByUserId
    {
        get
        {
            return _DeactivatedByUserId;
        }
        set
        {
            OnDeactivatedByUserIdChanging(value);
            ReportPropertyChanging("DeactivatedByUserId");
            _DeactivatedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DeactivatedByUserId");
            OnDeactivatedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _DeactivatedByUserId;
    partial void OnDeactivatedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnDeactivatedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Active
    {
        get
        {
            return _Active;
        }
        set
        {
            OnActiveChanging(value);
            ReportPropertyChanging("Active");
            _Active = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Active");
            OnActiveChanged();
        }
    }
    private global::System.Boolean _Active;
    partial void OnActiveChanging(global::System.Boolean value);
    partial void OnActiveChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User", "User")]
    public User User
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<User> UserReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DFModel.FK_Company_User", "User", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User1", "User")]
    public User User1
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User1", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User1", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<User> User1Reference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User1", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DFModel.FK_Company_User1", "User", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User2", "User")]
    public User User2
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User2", "User").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User2", "User").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<User> User2Reference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<User>("DFModel.FK_Company_User2", "User");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<User>("DFModel.FK_Company_User2", "User", value);
            }
        }
    } //test2

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Contact")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Contact : EntityObject , IContact
{
    #region Factory Method

    /// <summary>
    /// Create a new Contact object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="primary">Initial value of the Primary property.</param>
    public static Contact CreateContact(global::System.Guid id, global::System.Boolean primary)
    {
        Contact contact = new Contact();
        contact.Id = id;
        contact.Primary = primary;
        return contact;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String FirstName
    {
        get
        {
            return _FirstName;
        }
        set
        {
            OnFirstNameChanging(value);
            ReportPropertyChanging("FirstName");
            _FirstName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("FirstName");
            OnFirstNameChanged();
        }
    }
    private global::System.String _FirstName;
    partial void OnFirstNameChanging(global::System.String value);
    partial void OnFirstNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String LastName
    {
        get
        {
            return _LastName;
        }
        set
        {
            OnLastNameChanging(value);
            ReportPropertyChanging("LastName");
            _LastName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("LastName");
            OnLastNameChanged();
        }
    }
    private global::System.String _LastName;
    partial void OnLastNameChanging(global::System.String value);
    partial void OnLastNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Primary
    {
        get
        {
            return _Primary;
        }
        set
        {
            OnPrimaryChanging(value);
            ReportPropertyChanging("Primary");
            _Primary = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Primary");
            OnPrimaryChanged();
        }
    }
    private global::System.Boolean _Primary;
    partial void OnPrimaryChanging(global::System.Boolean value);
    partial void OnPrimaryChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Phone
    {
        get
        {
            return _Phone;
        }
        set
        {
            OnPhoneChanging(value);
            ReportPropertyChanging("Phone");
            _Phone = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Phone");
            OnPhoneChanged();
        }
    }
    private global::System.String _Phone;
    partial void OnPhoneChanging(global::System.String value);
    partial void OnPhoneChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Email
    {
        get
        {
            return _Email;
        }
        set
        {
            OnEmailChanging(value);
            ReportPropertyChanging("Email");
            _Email = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Email");
            OnEmailChanged();
        }
    }
    private global::System.String _Email;
    partial void OnEmailChanging(global::System.String value);
    partial void OnEmailChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Fax
    {
        get
        {
            return _Fax;
        }
        set
        {
            OnFaxChanging(value);
            ReportPropertyChanging("Fax");
            _Fax = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Fax");
            OnFaxChanged();
        }
    }
    private global::System.String _Fax;
    partial void OnFaxChanging(global::System.String value);
    partial void OnFaxChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Buyer_Contact", "Buyer")]
    public Buyer Buyer
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Contact", "Buyer").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Contact", "Buyer").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Buyer> BuyerReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Buyer_Contact", "Buyer");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buyer>("DFModel.FK_Buyer_Contact", "Buyer", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "Dealership_Contact", "Dealership")]
    public EntityCollection<Dealership> Dealership
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Dealership>("DFModel.Dealership_Contact", "Dealership");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Dealership>("DFModel.Dealership_Contact", "Dealership", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Lender_Contact", "Lender")]
    public EntityCollection<Lender> Lender
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Lender>("DFModel.FK_Lender_Contact", "Lender");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Lender>("DFModel.FK_Lender_Contact", "Lender", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Deal")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Deal : EntityObject , IDeal
{
    #region Factory Method

    /// <summary>
    /// Create a new Deal object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    public static Deal CreateDeal(global::System.Guid id)
    {
        Deal deal = new Deal();
        deal.Id = id;
        return deal;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> Completed
    {
        get
        {
            return _Completed;
        }
        set
        {
            OnCompletedChanging(value);
            ReportPropertyChanging("Completed");
            _Completed = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Completed");
            OnCompletedChanged();
        }
    }
    private Nullable<global::System.Boolean> _Completed;
    partial void OnCompletedChanging(Nullable<global::System.Boolean> value);
    partial void OnCompletedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Boolean> CashDeal
    {
        get
        {
            return _CashDeal;
        }
        set
        {
            OnCashDealChanging(value);
            ReportPropertyChanging("CashDeal");
            _CashDeal = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CashDeal");
            OnCashDealChanged();
        }
    }
    private Nullable<global::System.Boolean> _CashDeal;
    partial void OnCashDealChanging(Nullable<global::System.Boolean> value);
    partial void OnCashDealChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> SaleDate
    {
        get
        {
            return _SaleDate;
        }
        set
        {
            OnSaleDateChanging(value);
            ReportPropertyChanging("SaleDate");
            _SaleDate = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("SaleDate");
            OnSaleDateChanged();
        }
    }
    private Nullable<global::System.DateTime> _SaleDate;
    partial void OnSaleDateChanging(Nullable<global::System.DateTime> value);
    partial void OnSaleDateChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String SalesPerson
    {
        get
        {
            return _SalesPerson;
        }
        set
        {
            OnSalesPersonChanging(value);
            ReportPropertyChanging("SalesPerson");
            _SalesPerson = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("SalesPerson");
            OnSalesPersonChanged();
        }
    }
    private global::System.String _SalesPerson;
    partial void OnSalesPersonChanging(global::System.String value);
    partial void OnSalesPersonChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> DealershipId
    {
        get
        {
            return _DealershipId;
        }
        set
        {
            OnDealershipIdChanging(value);
            ReportPropertyChanging("DealershipId");
            _DealershipId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DealershipId");
            OnDealershipIdChanged();
        }
    }
    private Nullable<global::System.Guid> _DealershipId;
    partial void OnDealershipIdChanging(Nullable<global::System.Guid> value);
    partial void OnDealershipIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> LenderId
    {
        get
        {
            return _LenderId;
        }
        set
        {
            OnLenderIdChanging(value);
            ReportPropertyChanging("LenderId");
            _LenderId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("LenderId");
            OnLenderIdChanged();
        }
    }
    private Nullable<global::System.Guid> _LenderId;
    partial void OnLenderIdChanging(Nullable<global::System.Guid> value);
    partial void OnLenderIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> BuyerId
    {
        get
        {
            return _BuyerId;
        }
        set
        {
            OnBuyerIdChanging(value);
            ReportPropertyChanging("BuyerId");
            _BuyerId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("BuyerId");
            OnBuyerIdChanged();
        }
    }
    private Nullable<global::System.Guid> _BuyerId;
    partial void OnBuyerIdChanging(Nullable<global::System.Guid> value);
    partial void OnBuyerIdChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Buyer", "Buyer")]
    public Buyer Buyer
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Deal_Buyer", "Buyer").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Deal_Buyer", "Buyer").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Buyer> BuyerReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Buyer>("DFModel.FK_Deal_Buyer", "Buyer");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Buyer>("DFModel.FK_Deal_Buyer", "Buyer", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Dealership", "Dealership")]
    public Dealership Dealership
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealership>("DFModel.FK_Deal_Dealership", "Dealership").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealership>("DFModel.FK_Deal_Dealership", "Dealership").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Dealership> DealershipReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Dealership>("DFModel.FK_Deal_Dealership", "Dealership");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Dealership>("DFModel.FK_Deal_Dealership", "Dealership", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Lender", "Lender")]
    public Lender Lender
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lender>("DFModel.FK_Deal_Lender", "Lender").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lender>("DFModel.FK_Deal_Lender", "Lender").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Lender> LenderReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Lender>("DFModel.FK_Deal_Lender", "Lender");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Lender>("DFModel.FK_Deal_Lender", "Lender", value);
            }
        }
    } //test2

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Dealership")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Dealership : EntityObject , IDealership
{
    #region Factory Method

    /// <summary>
    /// Create a new Dealership object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    public static Dealership CreateDealership(global::System.Guid id)
    {
        Dealership dealership = new Dealership();
        dealership.Id = id;
        return dealership;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Name
    {
        get
        {
            return _Name;
        }
        set
        {
            OnNameChanging(value);
            ReportPropertyChanging("Name");
            _Name = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Name");
            OnNameChanged();
        }
    }
    private global::System.String _Name;
    partial void OnNameChanging(global::System.String value);
    partial void OnNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String UserName
    {
        get
        {
            return _UserName;
        }
        set
        {
            OnUserNameChanging(value);
            ReportPropertyChanging("UserName");
            _UserName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("UserName");
            OnUserNameChanged();
        }
    }
    private global::System.String _UserName;
    partial void OnUserNameChanging(global::System.String value);
    partial void OnUserNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> AddressID
    {
        get
        {
            return _AddressID;
        }
        set
        {
            OnAddressIDChanging(value);
            ReportPropertyChanging("AddressID");
            _AddressID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("AddressID");
            OnAddressIDChanged();
        }
    }
    private Nullable<global::System.Guid> _AddressID;
    partial void OnAddressIDChanging(Nullable<global::System.Guid> value);
    partial void OnAddressIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> ContactID
    {
        get
        {
            return _ContactID;
        }
        set
        {
            OnContactIDChanging(value);
            ReportPropertyChanging("ContactID");
            _ContactID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ContactID");
            OnContactIDChanged();
        }
    }
    private Nullable<global::System.Guid> _ContactID;
    partial void OnContactIDChanging(Nullable<global::System.Guid> value);
    partial void OnContactIDChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "Dealership_Address", "Address")]
    public Address Address
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.Dealership_Address", "Address").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.Dealership_Address", "Address").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Address> AddressReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.Dealership_Address", "Address");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DFModel.Dealership_Address", "Address", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "Dealership_Contact", "Contact")]
    public Contact Contact
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.Dealership_Contact", "Contact").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.Dealership_Contact", "Contact").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Contact> ContactReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.Dealership_Contact", "Contact");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DFModel.Dealership_Contact", "Contact", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Dealership", "Deal")]
    public EntityCollection<Deal> Deal
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DFModel.FK_Deal_Dealership", "Deal");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DFModel.FK_Deal_Dealership", "Deal", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Document")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Document : EntityObject , IDocument
{
    #region Factory Method

    /// <summary>
    /// Create a new Document object.
    /// </summary>
    /// <param name="documentID">Initial value of the DocumentID property.</param>
    /// <param name="required">Initial value of the Required property.</param>
    /// <param name="documentBankLenderID">Initial value of the DocumentBankLenderID property.</param>
    public static Document CreateDocument(global::System.Guid documentID, global::System.Boolean required, global::System.Guid documentBankLenderID)
    {
        Document document = new Document();
        document.DocumentID = documentID;
        document.Required = required;
        document.DocumentBankLenderID = documentBankLenderID;
        return document;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid DocumentID
    {
        get
        {
            return _DocumentID;
        }
        set
        {
            if (_DocumentID != value)
            {
                OnDocumentIDChanging(value);
                ReportPropertyChanging("DocumentID");
                _DocumentID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DocumentID");
                OnDocumentIDChanged();
            }
        }
    }
    private global::System.Guid _DocumentID;
    partial void OnDocumentIDChanging(global::System.Guid value);
    partial void OnDocumentIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String DocumentName
    {
        get
        {
            return _DocumentName;
        }
        set
        {
            OnDocumentNameChanging(value);
            ReportPropertyChanging("DocumentName");
            _DocumentName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("DocumentName");
            OnDocumentNameChanged();
        }
    }
    private global::System.String _DocumentName;
    partial void OnDocumentNameChanging(global::System.String value);
    partial void OnDocumentNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Required
    {
        get
        {
            return _Required;
        }
        set
        {
            OnRequiredChanging(value);
            ReportPropertyChanging("Required");
            _Required = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Required");
            OnRequiredChanged();
        }
    }
    private global::System.Boolean _Required;
    partial void OnRequiredChanging(global::System.Boolean value);
    partial void OnRequiredChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid DocumentBankLenderID
    {
        get
        {
            return _DocumentBankLenderID;
        }
        set
        {
            OnDocumentBankLenderIDChanging(value);
            ReportPropertyChanging("DocumentBankLenderID");
            _DocumentBankLenderID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DocumentBankLenderID");
            OnDocumentBankLenderIDChanged();
        }
    }
    private global::System.Guid _DocumentBankLenderID;
    partial void OnDocumentBankLenderIDChanging(global::System.Guid value);
    partial void OnDocumentBankLenderIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> DocumentBankLender_BankLenderID
    {
        get
        {
            return _DocumentBankLender_BankLenderID;
        }
        set
        {
            OnDocumentBankLender_BankLenderIDChanging(value);
            ReportPropertyChanging("DocumentBankLender_BankLenderID");
            _DocumentBankLender_BankLenderID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DocumentBankLender_BankLenderID");
            OnDocumentBankLender_BankLenderIDChanged();
        }
    }
    private Nullable<global::System.Guid> _DocumentBankLender_BankLenderID;
    partial void OnDocumentBankLender_BankLenderIDChanging(Nullable<global::System.Guid> value);
    partial void OnDocumentBankLender_BankLenderIDChanged();

#endregion

}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Instructions")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Instructions : EntityObject , IInstructions
{
    #region Factory Method

    /// <summary>
    /// Create a new Instructions object.
    /// </summary>
    /// <param name="instructionsID">Initial value of the InstructionsID property.</param>
    /// <param name="instructionBankLenderID">Initial value of the InstructionBankLenderID property.</param>
    public static Instructions CreateInstructions(global::System.Guid instructionsID, global::System.Guid instructionBankLenderID)
    {
        Instructions instructions = new Instructions();
        instructions.InstructionsID = instructionsID;
        instructions.InstructionBankLenderID = instructionBankLenderID;
        return instructions;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid InstructionsID
    {
        get
        {
            return _InstructionsID;
        }
        set
        {
            if (_InstructionsID != value)
            {
                OnInstructionsIDChanging(value);
                ReportPropertyChanging("InstructionsID");
                _InstructionsID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InstructionsID");
                OnInstructionsIDChanged();
            }
        }
    }
    private global::System.Guid _InstructionsID;
    partial void OnInstructionsIDChanging(global::System.Guid value);
    partial void OnInstructionsIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Instruction
    {
        get
        {
            return _Instruction;
        }
        set
        {
            OnInstructionChanging(value);
            ReportPropertyChanging("Instruction");
            _Instruction = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Instruction");
            OnInstructionChanged();
        }
    }
    private global::System.String _Instruction;
    partial void OnInstructionChanging(global::System.String value);
    partial void OnInstructionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid InstructionBankLenderID
    {
        get
        {
            return _InstructionBankLenderID;
        }
        set
        {
            OnInstructionBankLenderIDChanging(value);
            ReportPropertyChanging("InstructionBankLenderID");
            _InstructionBankLenderID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("InstructionBankLenderID");
            OnInstructionBankLenderIDChanged();
        }
    }
    private global::System.Guid _InstructionBankLenderID;
    partial void OnInstructionBankLenderIDChanging(global::System.Guid value);
    partial void OnInstructionBankLenderIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> InstructionBankLender_BankLenderID
    {
        get
        {
            return _InstructionBankLender_BankLenderID;
        }
        set
        {
            OnInstructionBankLender_BankLenderIDChanging(value);
            ReportPropertyChanging("InstructionBankLender_BankLenderID");
            _InstructionBankLender_BankLenderID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("InstructionBankLender_BankLenderID");
            OnInstructionBankLender_BankLenderIDChanged();
        }
    }
    private Nullable<global::System.Guid> _InstructionBankLender_BankLenderID;
    partial void OnInstructionBankLender_BankLenderIDChanging(Nullable<global::System.Guid> value);
    partial void OnInstructionBankLender_BankLenderIDChanged();

#endregion

}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Lender")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Lender : EntityObject , ILender
{
    #region Factory Method

    /// <summary>
    /// Create a new Lender object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="dealershipSplit">Initial value of the DealershipSplit property.</param>
    /// <param name="bankSplit">Initial value of the BankSplit property.</param>
    /// <param name="addressID">Initial value of the AddressID property.</param>
    /// <param name="contactID">Initial value of the ContactID property.</param>
    public static Lender CreateLender(global::System.Guid id, global::System.Int32 dealershipSplit, global::System.Int32 bankSplit, global::System.Guid addressID, global::System.Guid contactID)
    {
        Lender lender = new Lender();
        lender.Id = id;
        lender.DealershipSplit = dealershipSplit;
        lender.BankSplit = bankSplit;
        lender.AddressID = addressID;
        lender.ContactID = contactID;
        return lender;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String LenderName
    {
        get
        {
            return _LenderName;
        }
        set
        {
            OnLenderNameChanging(value);
            ReportPropertyChanging("LenderName");
            _LenderName = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("LenderName");
            OnLenderNameChanged();
        }
    }
    private global::System.String _LenderName;
    partial void OnLenderNameChanging(global::System.String value);
    partial void OnLenderNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String EIN
    {
        get
        {
            return _EIN;
        }
        set
        {
            OnEINChanging(value);
            ReportPropertyChanging("EIN");
            _EIN = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("EIN");
            OnEINChanged();
        }
    }
    private global::System.String _EIN;
    partial void OnEINChanging(global::System.String value);
    partial void OnEINChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 DealershipSplit
    {
        get
        {
            return _DealershipSplit;
        }
        set
        {
            OnDealershipSplitChanging(value);
            ReportPropertyChanging("DealershipSplit");
            _DealershipSplit = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DealershipSplit");
            OnDealershipSplitChanged();
        }
    }
    private global::System.Int32 _DealershipSplit;
    partial void OnDealershipSplitChanging(global::System.Int32 value);
    partial void OnDealershipSplitChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 BankSplit
    {
        get
        {
            return _BankSplit;
        }
        set
        {
            OnBankSplitChanging(value);
            ReportPropertyChanging("BankSplit");
            _BankSplit = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("BankSplit");
            OnBankSplitChanged();
        }
    }
    private global::System.Int32 _BankSplit;
    partial void OnBankSplitChanging(global::System.Int32 value);
    partial void OnBankSplitChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Phone
    {
        get
        {
            return _Phone;
        }
        set
        {
            OnPhoneChanging(value);
            ReportPropertyChanging("Phone");
            _Phone = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Phone");
            OnPhoneChanged();
        }
    }
    private global::System.String _Phone;
    partial void OnPhoneChanging(global::System.String value);
    partial void OnPhoneChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Fax
    {
        get
        {
            return _Fax;
        }
        set
        {
            OnFaxChanging(value);
            ReportPropertyChanging("Fax");
            _Fax = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Fax");
            OnFaxChanged();
        }
    }
    private global::System.String _Fax;
    partial void OnFaxChanging(global::System.String value);
    partial void OnFaxChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid AddressID
    {
        get
        {
            return _AddressID;
        }
        set
        {
            OnAddressIDChanging(value);
            ReportPropertyChanging("AddressID");
            _AddressID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("AddressID");
            OnAddressIDChanged();
        }
    }
    private global::System.Guid _AddressID;
    partial void OnAddressIDChanging(global::System.Guid value);
    partial void OnAddressIDChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid ContactID
    {
        get
        {
            return _ContactID;
        }
        set
        {
            OnContactIDChanging(value);
            ReportPropertyChanging("ContactID");
            _ContactID = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ContactID");
            OnContactIDChanged();
        }
    }
    private global::System.Guid _ContactID;
    partial void OnContactIDChanging(global::System.Guid value);
    partial void OnContactIDChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Lender_Address", "Address")]
    public Address Address
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Lender_Address", "Address").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Lender_Address", "Address").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Address> AddressReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Address>("DFModel.FK_Lender_Address", "Address");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Address>("DFModel.FK_Lender_Address", "Address", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Lender_Contact", "Contact")]
    public Contact Contact
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Lender_Contact", "Contact").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Lender_Contact", "Contact").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Contact> ContactReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Contact>("DFModel.FK_Lender_Contact", "Contact");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Contact>("DFModel.FK_Lender_Contact", "Contact", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Deal_Lender", "Deal")]
    public EntityCollection<Deal> Deal
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Deal>("DFModel.FK_Deal_Lender", "Deal");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Deal>("DFModel.FK_Deal_Lender", "Deal", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="Menu")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class Menu : EntityObject , IMenu
{
    #region Factory Method

    /// <summary>
    /// Create a new Menu object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="description">Initial value of the Description property.</param>
    /// <param name="displayText">Initial value of the DisplayText property.</param>
    /// <param name="sortOrder">Initial value of the SortOrder property.</param>
    /// <param name="dateCreated">Initial value of the DateCreated property.</param>
    /// <param name="active">Initial value of the Active property.</param>
    public static Menu CreateMenu(global::System.Int32 id, global::System.String description, global::System.String displayText, global::System.Int16 sortOrder, global::System.DateTime dateCreated, global::System.Boolean active)
    {
        Menu menu = new Menu();
        menu.Id = id;
        menu.Description = description;
        menu.DisplayText = displayText;
        menu.SortOrder = sortOrder;
        menu.DateCreated = dateCreated;
        menu.Active = active;
        return menu;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Int32 _Id;
    partial void OnIdChanging(global::System.Int32 value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Description
    {
        get
        {
            return _Description;
        }
        set
        {
            OnDescriptionChanging(value);
            ReportPropertyChanging("Description");
            _Description = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Description");
            OnDescriptionChanged();
        }
    }
    private global::System.String _Description;
    partial void OnDescriptionChanging(global::System.String value);
    partial void OnDescriptionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String DisplayText
    {
        get
        {
            return _DisplayText;
        }
        set
        {
            OnDisplayTextChanging(value);
            ReportPropertyChanging("DisplayText");
            _DisplayText = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("DisplayText");
            OnDisplayTextChanged();
        }
    }
    private global::System.String _DisplayText;
    partial void OnDisplayTextChanging(global::System.String value);
    partial void OnDisplayTextChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> MenuTypeId
    {
        get
        {
            return _MenuTypeId;
        }
        set
        {
            OnMenuTypeIdChanging(value);
            ReportPropertyChanging("MenuTypeId");
            _MenuTypeId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("MenuTypeId");
            OnMenuTypeIdChanged();
        }
    }
    private Nullable<global::System.Int32> _MenuTypeId;
    partial void OnMenuTypeIdChanging(Nullable<global::System.Int32> value);
    partial void OnMenuTypeIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Area
    {
        get
        {
            return _Area;
        }
        set
        {
            OnAreaChanging(value);
            ReportPropertyChanging("Area");
            _Area = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Area");
            OnAreaChanged();
        }
    }
    private global::System.String _Area;
    partial void OnAreaChanging(global::System.String value);
    partial void OnAreaChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Controller
    {
        get
        {
            return _Controller;
        }
        set
        {
            OnControllerChanging(value);
            ReportPropertyChanging("Controller");
            _Controller = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Controller");
            OnControllerChanged();
        }
    }
    private global::System.String _Controller;
    partial void OnControllerChanging(global::System.String value);
    partial void OnControllerChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Action
    {
        get
        {
            return _Action;
        }
        set
        {
            OnActionChanging(value);
            ReportPropertyChanging("Action");
            _Action = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Action");
            OnActionChanged();
        }
    }
    private global::System.String _Action;
    partial void OnActionChanging(global::System.String value);
    partial void OnActionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String CSSClass
    {
        get
        {
            return _CSSClass;
        }
        set
        {
            OnCSSClassChanging(value);
            ReportPropertyChanging("CSSClass");
            _CSSClass = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("CSSClass");
            OnCSSClassChanged();
        }
    }
    private global::System.String _CSSClass;
    partial void OnCSSClassChanging(global::System.String value);
    partial void OnCSSClassChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String ImageUrl
    {
        get
        {
            return _ImageUrl;
        }
        set
        {
            OnImageUrlChanging(value);
            ReportPropertyChanging("ImageUrl");
            _ImageUrl = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("ImageUrl");
            OnImageUrlChanged();
        }
    }
    private global::System.String _ImageUrl;
    partial void OnImageUrlChanging(global::System.String value);
    partial void OnImageUrlChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Int32> ParentId
    {
        get
        {
            return _ParentId;
        }
        set
        {
            OnParentIdChanging(value);
            ReportPropertyChanging("ParentId");
            _ParentId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ParentId");
            OnParentIdChanged();
        }
    }
    private Nullable<global::System.Int32> _ParentId;
    partial void OnParentIdChanging(Nullable<global::System.Int32> value);
    partial void OnParentIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int16 SortOrder
    {
        get
        {
            return _SortOrder;
        }
        set
        {
            OnSortOrderChanging(value);
            ReportPropertyChanging("SortOrder");
            _SortOrder = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("SortOrder");
            OnSortOrderChanged();
        }
    }
    private global::System.Int16 _SortOrder;
    partial void OnSortOrderChanging(global::System.Int16 value);
    partial void OnSortOrderChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime DateCreated
    {
        get
        {
            return _DateCreated;
        }
        set
        {
            OnDateCreatedChanging(value);
            ReportPropertyChanging("DateCreated");
            _DateCreated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateCreated");
            OnDateCreatedChanged();
        }
    }
    private global::System.DateTime _DateCreated;
    partial void OnDateCreatedChanging(global::System.DateTime value);
    partial void OnDateCreatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateModified
    {
        get
        {
            return _DateModified;
        }
        set
        {
            OnDateModifiedChanging(value);
            ReportPropertyChanging("DateModified");
            _DateModified = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateModified");
            OnDateModifiedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateModified;
    partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateModifiedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateDeactivated
    {
        get
        {
            return _DateDeactivated;
        }
        set
        {
            OnDateDeactivatedChanging(value);
            ReportPropertyChanging("DateDeactivated");
            _DateDeactivated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateDeactivated");
            OnDateDeactivatedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateDeactivated;
    partial void OnDateDeactivatedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateDeactivatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Active
    {
        get
        {
            return _Active;
        }
        set
        {
            OnActiveChanging(value);
            ReportPropertyChanging("Active");
            _Active = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Active");
            OnActiveChanged();
        }
    }
    private global::System.Boolean _Active;
    partial void OnActiveChanging(global::System.Boolean value);
    partial void OnActiveChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Menu_Menu", "Menu1")]
    public EntityCollection<Menu> Menu1
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Menu>("DFModel.FK_Menu_Menu", "Menu1");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Menu>("DFModel.FK_Menu_Menu", "Menu1", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Menu_Menu", "Menu")]
    public Menu Menu2
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("DFModel.FK_Menu_Menu", "Menu").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("DFModel.FK_Menu_Menu", "Menu").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<Menu> Menu2Reference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Menu>("DFModel.FK_Menu_Menu", "Menu");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Menu>("DFModel.FK_Menu_Menu", "Menu", value);
            }
        }
    } //test2

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Menu_MenuType", "MenuType")]
    public MenuType MenuType
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuType>("DFModel.FK_Menu_MenuType", "MenuType").Value;
        }
        set
        {
            ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuType>("DFModel.FK_Menu_MenuType", "MenuType").Value = value;
        }
    }
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    //[BrowsableAttribute(false)]
    //[DataMemberAttribute()]
    public EntityReference<MenuType> MenuTypeReference
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<MenuType>("DFModel.FK_Menu_MenuType", "MenuType");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<MenuType>("DFModel.FK_Menu_MenuType", "MenuType", value);
            }
        }
    } //test2

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="MenuType")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class MenuType : EntityObject , IMenuType
{
    #region Factory Method

    /// <summary>
    /// Create a new MenuType object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="description">Initial value of the Description property.</param>
    public static MenuType CreateMenuType(global::System.Int32 id, global::System.String description)
    {
        MenuType menuType = new MenuType();
        menuType.Id = id;
        menuType.Description = description;
        return menuType;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Int32 Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Int32 _Id;
    partial void OnIdChanging(global::System.Int32 value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Description
    {
        get
        {
            return _Description;
        }
        set
        {
            OnDescriptionChanging(value);
            ReportPropertyChanging("Description");
            _Description = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Description");
            OnDescriptionChanged();
        }
    }
    private global::System.String _Description;
    partial void OnDescriptionChanging(global::System.String value);
    partial void OnDescriptionChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Menu_MenuType", "Menu")]
    public EntityCollection<Menu> Menu
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Menu>("DFModel.FK_Menu_MenuType", "Menu");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Menu>("DFModel.FK_Menu_MenuType", "Menu", value);
            }
        }
    }

#endregion
}//test
		



/// <summary>
/// No Metadata Documentation available.
/// </summary>
[EdmEntityTypeAttribute(NamespaceName="DFModel", Name="User")]
[Serializable()]
[DataContractAttribute(IsReference=true)]
public partial class User : EntityObject , IUser
{
    #region Factory Method

    /// <summary>
    /// Create a new User object.
    /// </summary>
    /// <param name="id">Initial value of the Id property.</param>
    /// <param name="firstName">Initial value of the FirstName property.</param>
    /// <param name="lastName">Initial value of the LastName property.</param>
    /// <param name="description">Initial value of the Description property.</param>
    /// <param name="dateCreated">Initial value of the DateCreated property.</param>
    /// <param name="active">Initial value of the Active property.</param>
    public static User CreateUser(global::System.Guid id, global::System.String firstName, global::System.String lastName, global::System.String description, global::System.DateTime dateCreated, global::System.Boolean active)
    {
        User user = new User();
        user.Id = id;
        user.FirstName = firstName;
        user.LastName = lastName;
        user.Description = description;
        user.DateCreated = dateCreated;
        user.Active = active;
        return user;
    }

    #endregion
#region Primitive Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Guid Id
    {
        get
        {
            return _Id;
        }
        set
        {
            if (_Id != value)
            {
                OnIdChanging(value);
                ReportPropertyChanging("Id");
                _Id = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Id");
                OnIdChanged();
            }
        }
    }
    private global::System.Guid _Id;
    partial void OnIdChanging(global::System.Guid value);
    partial void OnIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String FirstName
    {
        get
        {
            return _FirstName;
        }
        set
        {
            OnFirstNameChanging(value);
            ReportPropertyChanging("FirstName");
            _FirstName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("FirstName");
            OnFirstNameChanged();
        }
    }
    private global::System.String _FirstName;
    partial void OnFirstNameChanging(global::System.String value);
    partial void OnFirstNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String LastName
    {
        get
        {
            return _LastName;
        }
        set
        {
            OnLastNameChanging(value);
            ReportPropertyChanging("LastName");
            _LastName = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("LastName");
            OnLastNameChanged();
        }
    }
    private global::System.String _LastName;
    partial void OnLastNameChanging(global::System.String value);
    partial void OnLastNameChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public global::System.String Email
    {
        get
        {
            return _Email;
        }
        set
        {
            OnEmailChanging(value);
            ReportPropertyChanging("Email");
            _Email = StructuralObject.SetValidValue(value, true);
            ReportPropertyChanged("Email");
            OnEmailChanged();
        }
    }
    private global::System.String _Email;
    partial void OnEmailChanging(global::System.String value);
    partial void OnEmailChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.String Description
    {
        get
        {
            return _Description;
        }
        set
        {
            OnDescriptionChanging(value);
            ReportPropertyChanging("Description");
            _Description = StructuralObject.SetValidValue(value, false);
            ReportPropertyChanged("Description");
            OnDescriptionChanged();
        }
    }
    private global::System.String _Description;
    partial void OnDescriptionChanging(global::System.String value);
    partial void OnDescriptionChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.DateTime DateCreated
    {
        get
        {
            return _DateCreated;
        }
        set
        {
            OnDateCreatedChanging(value);
            ReportPropertyChanging("DateCreated");
            _DateCreated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateCreated");
            OnDateCreatedChanged();
        }
    }
    private global::System.DateTime _DateCreated;
    partial void OnDateCreatedChanging(global::System.DateTime value);
    partial void OnDateCreatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateModified
    {
        get
        {
            return _DateModified;
        }
        set
        {
            OnDateModifiedChanging(value);
            ReportPropertyChanging("DateModified");
            _DateModified = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateModified");
            OnDateModifiedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateModified;
    partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateModifiedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.DateTime> DateDeactivated
    {
        get
        {
            return _DateDeactivated;
        }
        set
        {
            OnDateDeactivatedChanging(value);
            ReportPropertyChanging("DateDeactivated");
            _DateDeactivated = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DateDeactivated");
            OnDateDeactivatedChanged();
        }
    }
    private Nullable<global::System.DateTime> _DateDeactivated;
    partial void OnDateDeactivatedChanging(Nullable<global::System.DateTime> value);
    partial void OnDateDeactivatedChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> CreatedByUserId
    {
        get
        {
            return _CreatedByUserId;
        }
        set
        {
            OnCreatedByUserIdChanging(value);
            ReportPropertyChanging("CreatedByUserId");
            _CreatedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("CreatedByUserId");
            OnCreatedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _CreatedByUserId;
    partial void OnCreatedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnCreatedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> ModifiedByUserId
    {
        get
        {
            return _ModifiedByUserId;
        }
        set
        {
            OnModifiedByUserIdChanging(value);
            ReportPropertyChanging("ModifiedByUserId");
            _ModifiedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("ModifiedByUserId");
            OnModifiedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _ModifiedByUserId;
    partial void OnModifiedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnModifiedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
    [DataMemberAttribute()]
    public Nullable<global::System.Guid> DeactivatedByUserId
    {
        get
        {
            return _DeactivatedByUserId;
        }
        set
        {
            OnDeactivatedByUserIdChanging(value);
            ReportPropertyChanging("DeactivatedByUserId");
            _DeactivatedByUserId = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("DeactivatedByUserId");
            OnDeactivatedByUserIdChanged();
        }
    }
    private Nullable<global::System.Guid> _DeactivatedByUserId;
    partial void OnDeactivatedByUserIdChanging(Nullable<global::System.Guid> value);
    partial void OnDeactivatedByUserIdChanged();

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
    [DataMemberAttribute()]
    public global::System.Boolean Active
    {
        get
        {
            return _Active;
        }
        set
        {
            OnActiveChanging(value);
            ReportPropertyChanging("Active");
            _Active = StructuralObject.SetValidValue(value);
            ReportPropertyChanged("Active");
            OnActiveChanged();
        }
    }
    private global::System.Boolean _Active;
    partial void OnActiveChanging(global::System.Boolean value);
    partial void OnActiveChanged();

#endregion

#region Navigation Properties

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User", "Company")]
    public EntityCollection<Company> Company
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("DFModel.FK_Company_User", "Company");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("DFModel.FK_Company_User", "Company", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User1", "Company")]
    public EntityCollection<Company> Company1
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("DFModel.FK_Company_User1", "Company");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("DFModel.FK_Company_User1", "Company", value);
            }
        }
    }

    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmRelationshipNavigationPropertyAttribute("DFModel", "FK_Company_User2", "Company")]
    public EntityCollection<Company> Company2
    {
        get
        {
            return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Company>("DFModel.FK_Company_User2", "Company");
        }
        set
        {
            if ((value != null))
            {
                ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Company>("DFModel.FK_Company_User2", "Company", value);
            }
        }
    }

#endregion
}//test

} //test3
